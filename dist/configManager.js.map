{
  "version": 3,
  "sources": ["../src/configManager.js"],
  "sourcesContent": ["// configManager.js - Configuration manager for AI service\n\nclass ConfigManager {\n    constructor() {\n        // Default configuration for OpenAI-compatible providers\n        this.defaultConfig = {\n            providerUrl: 'https://api.together.xyz/v1/chat/completions',\n            apiKey: '',\n            model: 'meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo',\n            systemPrompt: 'You are a helpful assistant that analyzes emails.'\n        };\n        \n        // Load configuration from storage if available\n        this.loadConfig();\n    }\n    \n    // Load configuration from localStorage\n    loadConfig() {\n        try {\n            const savedConfig = localStorage.getItem('ai-extension-config');\n            if (savedConfig) {\n                this.config = { ...this.defaultConfig, ...JSON.parse(savedConfig) };\n            } else {\n                this.config = { ...this.defaultConfig };\n            }\n        } catch (error) {\n            console.error('Error loading configuration:', error);\n            this.config = { ...this.defaultConfig };\n        }\n    }\n    \n    // Save configuration to localStorage\n    saveConfig(config) {\n        try {\n            this.config = { ...this.config, ...config };\n            localStorage.setItem('ai-extension-config', JSON.stringify(this.config));\n        } catch (error) {\n            console.error('Error saving configuration:', error);\n        }\n    }\n    \n    // Get current configuration\n    getConfig() {\n        return { ...this.config };\n    }\n    \n    // Update specific configuration values\n    updateConfig(key, value) {\n        this.config[key] = value;\n        this.saveConfig(this.config);\n    }\n    \n    // Update multiple configuration values at once\n    updateConfigBatch(newConfig) {\n        this.config = { ...this.config, ...newConfig };\n        this.saveConfig(this.config);\n    }\n    \n    // Reset to default configuration\n    resetToDefault() {\n        this.config = { ...this.defaultConfig };\n        this.saveConfig(this.config);\n    }\n    \n    // Get available preset configurations\n    getPresetConfigs() {\n        return {\n            together: {\n                providerUrl: 'https://api.together.xyz/v1/chat/completions',\n                apiKey: '',\n                model: 'meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo',\n                systemPrompt: 'You are a helpful assistant that analyzes emails.'\n            },\n            openai: {\n                providerUrl: 'https://api.openai.com/v1/chat/completions',\n                apiKey: '',\n                model: 'gpt-4-turbo',\n                systemPrompt: 'You are a helpful assistant that analyzes emails.'\n            },\n            anthropic: {\n                providerUrl: 'https://api.anthropic.com/v1/messages',\n                apiKey: '',\n                model: 'claude-3-sonnet-20240229',\n                systemPrompt: 'You are a helpful assistant that analyzes emails.'\n            },\n            ollama: {\n                providerUrl: 'http://localhost:11434/api/chat',\n                apiKey: '',\n                model: 'llama3',\n                systemPrompt: 'You are a helpful assistant that analyzes emails.'\n            }\n        };\n    }\n}\n\n// Create a singleton instance\nconst configManager = new ConfigManager();\n\nexport default configManager;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAEA,MAAM,gBAAN,MAAoB;AAAA,IAChB,cAAc;AAEV,WAAK,gBAAgB;AAAA,QACjB,aAAa;AAAA,QACb,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,cAAc;AAAA,MAClB;AAGA,WAAK,WAAW;AAAA,IACpB;AAAA;AAAA,IAGA,aAAa;AACT,UAAI;AACA,cAAM,cAAc,aAAa,QAAQ,qBAAqB;AAC9D,YAAI,aAAa;AACb,eAAK,SAAS,kCAAK,KAAK,gBAAkB,KAAK,MAAM,WAAW;AAAA,QACpE,OAAO;AACH,eAAK,SAAS,mBAAK,KAAK;AAAA,QAC5B;AAAA,MACJ,SAAS,OAAO;AACZ,gBAAQ,MAAM,gCAAgC,KAAK;AACnD,aAAK,SAAS,mBAAK,KAAK;AAAA,MAC5B;AAAA,IACJ;AAAA;AAAA,IAGA,WAAW,QAAQ;AACf,UAAI;AACA,aAAK,SAAS,kCAAK,KAAK,SAAW;AACnC,qBAAa,QAAQ,uBAAuB,KAAK,UAAU,KAAK,MAAM,CAAC;AAAA,MAC3E,SAAS,OAAO;AACZ,gBAAQ,MAAM,+BAA+B,KAAK;AAAA,MACtD;AAAA,IACJ;AAAA;AAAA,IAGA,YAAY;AACR,aAAO,mBAAK,KAAK;AAAA,IACrB;AAAA;AAAA,IAGA,aAAa,KAAK,OAAO;AACrB,WAAK,OAAO,GAAG,IAAI;AACnB,WAAK,WAAW,KAAK,MAAM;AAAA,IAC/B;AAAA;AAAA,IAGA,kBAAkB,WAAW;AACzB,WAAK,SAAS,kCAAK,KAAK,SAAW;AACnC,WAAK,WAAW,KAAK,MAAM;AAAA,IAC/B;AAAA;AAAA,IAGA,iBAAiB;AACb,WAAK,SAAS,mBAAK,KAAK;AACxB,WAAK,WAAW,KAAK,MAAM;AAAA,IAC/B;AAAA;AAAA,IAGA,mBAAmB;AACf,aAAO;AAAA,QACH,UAAU;AAAA,UACN,aAAa;AAAA,UACb,QAAQ;AAAA,UACR,OAAO;AAAA,UACP,cAAc;AAAA,QAClB;AAAA,QACA,QAAQ;AAAA,UACJ,aAAa;AAAA,UACb,QAAQ;AAAA,UACR,OAAO;AAAA,UACP,cAAc;AAAA,QAClB;AAAA,QACA,WAAW;AAAA,UACP,aAAa;AAAA,UACb,QAAQ;AAAA,UACR,OAAO;AAAA,UACP,cAAc;AAAA,QAClB;AAAA,QACA,QAAQ;AAAA,UACJ,aAAa;AAAA,UACb,QAAQ;AAAA,UACR,OAAO;AAAA,UACP,cAAc;AAAA,QAClB;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAGA,MAAM,gBAAgB,IAAI,cAAc;AAExC,MAAO,wBAAQ;",
  "names": []
}
